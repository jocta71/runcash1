// Script para registrar o webhook no Asaas
const axios = require('axios');
require('dotenv').config({ path: './backend/api/.env' });

// Configura√ß√µes do ambiente
const ASAAS_API_KEY = process.env.ASAAS_API_KEY;
const ASAAS_ENVIRONMENT = process.env.ASAAS_ENVIRONMENT || 'sandbox';
const BASE_URL = ASAAS_ENVIRONMENT === 'production'
  ? 'https://www.asaas.com/api/v3'
  : 'https://sandbox.asaas.com/api/v3';

// URL do seu webhook - SUBSTITUA pela URL correta do seu ambiente
const PUBLIC_WEBHOOK_URL = process.env.PUBLIC_WEBHOOK_URL || 'https://seudominio.com/api/asaas-webhook';

// Fun√ß√£o principal
async function registerWebhook() {
  if (!ASAAS_API_KEY) {
    console.error('‚ùå ERRO: Chave de API do Asaas n√£o configurada.');
    console.error('Por favor, configure a vari√°vel ASAAS_API_KEY no arquivo .env');
    return;
  }

  console.log(`üîπ Ambiente Asaas: ${ASAAS_ENVIRONMENT}`);
  console.log(`üîπ URL do webhook: ${PUBLIC_WEBHOOK_URL}`);

  try {
    // Primeiro, verificar se j√° existe um webhook configurado
    console.log('\nüîç Verificando webhooks existentes...');
    
    const existingWebhooksResponse = await axios({
      method: 'get',
      url: `${BASE_URL}/webhook`,
      headers: {
        'access_token': ASAAS_API_KEY
      }
    });

    const existingWebhooks = existingWebhooksResponse.data.data || [];
    
    if (existingWebhooks.length > 0) {
      console.log(`‚úÖ ${existingWebhooks.length} webhook(s) encontrado(s):`);
      
      for (const webhook of existingWebhooks) {
        console.log(`   - URL: ${webhook.url}`);
        console.log(`   - Ativo: ${webhook.enabled ? 'Sim' : 'N√£o'}`);
        console.log(`   - ID: ${webhook.id}`);
        console.log('');
      }
      
      // Verificar se o webhook com a nossa URL j√° existe
      const ourWebhook = existingWebhooks.find(wh => wh.url === PUBLIC_WEBHOOK_URL);
      
      if (ourWebhook) {
        console.log('‚úÖ O webhook com a URL especificada j√° est√° configurado.');
        
        // Verifica se est√° ativo e habilita se necess√°rio
        if (!ourWebhook.enabled) {
          console.log('‚ö†Ô∏è O webhook est√° desativado. Ativando...');
          
          await axios({
            method: 'put',
            url: `${BASE_URL}/webhook/${ourWebhook.id}`,
            headers: {
              'access_token': ASAAS_API_KEY
            },
            data: {
              enabled: true
            }
          });
          
          console.log('‚úÖ Webhook ativado com sucesso!');
        }
        
        return;
      }
    } else {
      console.log('‚ÑπÔ∏è Nenhum webhook configurado.');
    }
    
    // Criar um novo webhook
    console.log('\nüîß Criando novo webhook...');
    
    const response = await axios({
      method: 'post',
      url: `${BASE_URL}/webhook`,
      headers: {
        'access_token': ASAAS_API_KEY
      },
      data: {
        url: PUBLIC_WEBHOOK_URL,
        email: process.env.ADMIN_EMAIL || 'admin@exemplo.com',
        enabled: true,
        interrupted: false,
        apiVersion: 3
      }
    });
    
    console.log('‚úÖ Webhook registrado com sucesso!');
    console.log(`üîπ ID: ${response.data.id}`);
    console.log(`üîπ URL: ${response.data.url}`);
    console.log(`üîπ E-mail: ${response.data.email}`);
    console.log(`üîπ Ativo: ${response.data.enabled ? 'Sim' : 'N√£o'}`);
  } catch (error) {
    console.error('‚ùå Erro ao registrar webhook:');
    
    if (error.response) {
      console.error(`   Status: ${error.response.status}`);
      console.error('   Detalhes:', error.response.data);
    } else {
      console.error(error.message);
    }
  }
}

// Executar a fun√ß√£o principal
registerWebhook(); 